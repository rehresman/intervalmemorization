{"version":3,"sources":["actions/index.js","statistics.js","flashcard.js","config.js","results.js","controls.js","stopwatch.js","oops.js","App.js","reducers/index.js","reducers/reducer_notes.js","reducers/reducer_viewControls.js","reducers/reducer_time.js","reducers/reducer_stats.js","reducers/reducer_history.js","serviceWorker.js","index.js"],"names":["updateProbability","note","interval","probability","type","payload","getResponseTime","prevStats","time","flashcardShownTime","getSampleMean","responseTime","increase","sumResponseTime","numResponses","getResponseDeviation","Math","pow","sampleMean","getSampleVariance","currentVariance","solution","sumTestVariance","Number","MAX_VALUE","alert","getAlpha","sampleVariance","getBeta","Flashcard","state","answer","showAnswer","chooseNext","bind","getNewProbability","getRandomNote","getRandomInterval","getAnswer","handleClick","n","floor","random","i","selection","this","props","notes","intervals","setState","prevProps","prevState","console","log","responseScore","jStat","gamma","cdf","alpha","beta","p","number","size","Object","entries","length","Date","getTime","dispatch","updateFlashcardShownTime","stats","savePreviousProbability","updateStats","noteDetails","name","intervalDetails","answerDetails","answerClasses","flashcardClasses","intervalClasses","viewControls","id","className","onClick","React","Component","connect","history","Results","buildChart","getIntervalsForNote","getNewRow","getXAxis","getIntervalNames","output","push","intervalArray","map","el","style","backgroundColor","numberToColorHsl","rgb","h","s","l","r","g","b","hue2rgb","q","t","hslToRgb","Controls","getIntervals","expandedView","getNotes","updateIntervalList","updateNoteList","isActiveInterval","isActiveNote","show","setTimeout","toggleView","active","key","defaultChecked","value","handleIntervalClick","htmlFor","noteArray","handleNoteClick","classes","notesArr","intervalArr","Stopwatch","color","changeColor","setInterval","currentValue","round","currentTime","start","prevValue","clearInterval","seconds","minutes","zero","Oops","oops","handleOopsClick","oopsClasses","text","App","buttonText","appClasses","rootReducer","combineReducers","action","responseDeviation","Boolean","window","location","hostname","match","store","createStore","reducers","notesMap","intervalMap","testVariance","getInitialState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b92f9c91.chunk.js","sourcesContent":["export const UPDATE_INTERVAL_LIST = \"UPDATE_INTERVAL_LIST\";\nexport const UPDATE_NOTE_LIST = \"UPDATE_NOTE_LIST\";\nexport const TOGGLE_CONTROLS = \"TOGGLE_CONTROLS\";\nexport const UPDATE_PROBABILITY = \"UPDATE_PROBABILITY\";\nexport const UPDATE_TIME = \"UPDATE_TIME\";\nexport const SAVE_PREVIOUS_PROBABILITY = \"SAVE_PREVIOUS_PROBABILITY\";\nexport const UPDATE_STATS = \"UPDATE_STATS\";\nexport const START_TIME = \"START_TIME\";\nexport const UPDATE_FLASHCARD_SHOWN_TIME = \"UPDATE_FLASHCARD_SHOWN_TIME\";\nexport const ANSWER_RECEIVED = \"ANSWER_RECEIVED\";\n\nexport function answerReceived(time) {\n\treturn {\n\t\ttype: ANSWER_RECEIVED,\n\t\tpayload: time,\n\t};\n}\n\nexport function startTime(time) {\n\treturn { type: START_TIME, payload: time };\n}\n\nexport function toggleControls() {\n\treturn {\n\t\ttype: TOGGLE_CONTROLS,\n\t};\n}\n\nexport function updateStats(time, numResponses = 1) {\n\tconsole.log(\"here: \", { time, numResponses });\n\treturn {\n\t\ttype: UPDATE_STATS,\n\t\tpayload: { time, numResponses },\n\t};\n}\n\nexport function updateTime(time) {\n\treturn {\n\t\ttype: UPDATE_TIME,\n\t\tpayload: time,\n\t};\n}\n\nexport function updateFlashcardShownTime(time) {\n\treturn {\n\t\ttype: UPDATE_FLASHCARD_SHOWN_TIME,\n\t\tpayload: time,\n\t};\n}\n\nexport function updateProbability(note, interval, probability) {\n\treturn {\n\t\ttype: UPDATE_PROBABILITY,\n\t\tpayload: { note, interval, probability },\n\t};\n}\n\n//take the probability\nexport function savePreviousProbability(note, interval, probability) {\n\treturn {\n\t\ttype: SAVE_PREVIOUS_PROBABILITY,\n\t\tpayload: { note, interval, probability },\n\t};\n}\n","export function getCurrentProbability(state) {\n\treturn state.interval.probability;\n}\n\nexport function getResponseTime(prevStats, time) {\n\treturn time - prevStats.flashcardShownTime;\n}\n\nexport function getSampleMean(prevStats, responseTime, increase = 1) {\n\treturn (\n\t\t(responseTime + prevStats.sumResponseTime) /\n\t\t(prevStats.numResponses + increase)\n\t);\n}\n\nexport function getResponseDeviation(prevStats, responseTime) {\n\treturn Math.pow(responseTime - prevStats.sampleMean, 2);\n}\n\nexport function getSampleVariance(prevStats, currentVariance) {\n\tconst solution =\n\t\tprevStats.numResponses > 1\n\t\t\t? (prevStats.sumTestVariance + currentVariance) / prevStats.numResponses\n\t\t\t: 6250000;\n\tif (solution >= Number.MAX_VALUE) {\n\t\talert(\"Variance overflow.  Need to fix this\");\n\t}\n\treturn solution;\n}\n\nexport function getAlpha(sampleMean, sampleVariance) {\n\treturn Math.pow(sampleMean, 2) / sampleVariance;\n}\n\nexport function getBeta(sampleMean, sampleVariance) {\n\treturn sampleMean / sampleVariance;\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n\tupdateFlashcardShownTime,\n\tupdateStats,\n\tupdateProbability,\n\tsavePreviousProbability,\n} from \"./actions/index\";\nimport { getResponseTime } from \"./statistics.js\";\nimport { jStat } from \"jstat\";\n\nclass Flashcard extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tnote: null,\n\t\t\tinterval: null,\n\t\t\tanswer: null,\n\t\t\tshowAnswer: false,\n\t\t};\n\t\tthis.chooseNext = this.chooseNext.bind(this);\n\t\tthis.getNewProbability = this.getNewProbability.bind(this);\n\t\tthis.getRandomNote = this.getRandomNote.bind(this);\n\t\tthis.getRandomInterval = this.getRandomInterval.bind(this);\n\t\tthis.getAnswer = this.getAnswer.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\tchooseNext() {\n\t\tconst n = Math.floor(Math.random() * 12);\n\t\tconst i = Math.floor(Math.random() * 11) + 1;\n\t\tconst selection = this.props.notes[n].intervals[i];\n\t\tif (Math.random() > selection.probability) {\n\t\t\treturn this.chooseNext();\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tnote: this.props.notes[n],\n\t\t\t\tinterval: this.props.notes[n].intervals[i],\n\t\t\t};\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tnote: this.getRandomNote(),\n\t\t\tinterval: this.getRandomInterval(),\n\t\t\tanswer: null,\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (\n\t\t\tprevState.note !== this.state.note ||\n\t\t\tprevState.interval !== this.state.interval\n\t\t) {\n\t\t\tthis.setState(this.getAnswer);\n\t\t}\n\t\tif (this.state.note !== prevState.note) {\n\t\t\tconsole.log(this.props);\n\t\t}\n\t}\n\n\tgetNewProbability(prevStats, time) {\n\t\tconst responseTime = getResponseTime(prevStats, time);\n\t\tconst responseScore = jStat.gamma.cdf(\n\t\t\tresponseTime,\n\t\t\tprevStats.alpha,\n\t\t\t1 / prevStats.beta\n\t\t);\n\t\tconst p = this.state.interval.probability;\n\n\t\t//p=.7\n\t\t//rS = .6\n\t\t//output = .7 - .3 *(rS - .5)\n\t\t// output should be .7 if rS = .5\n\t\t//output should be greater than .7 if rS < .5\n\t\t//output should be less than .7 if rS > .5\n\t\t/*\n\t\t\t\tex.\n\t\t\t\t.7 - .3 * (.6 - .5) = .7 - .03 = .67.  A slight decrease in probability \n\t\t\t\tto be shown again.\n\t\t\t\t\n\t\t\t\tp=.5\n\t\t\t\trS = .5\n\t\t\t\t.5 - .5 *(.5-.5) = .5\n\n\t\t\t\tp = .4\n\t\t\t\trS = .8\n\t\t\t\t.4 - .6(.8 - .5) = .22\n\n\t\t\t\tp = .4\n\t\t\t\trS = .3\n\t\t\t\t.4 - .6(.3 - .5) = .52\n\n\t\t*/\n\n\t\treturn p + (1 - p) * (responseScore - 0.5);\n\t}\n\n\tgetRandomNote() {\n\t\treturn this.props.notes[0];\n\t}\n\n\tgetRandomInterval() {\n\t\treturn this.props.notes[0].intervals[1];\n\t}\n\n\tgetAnswer(state) {\n\t\tconst number =\n\t\t\t(state.note.number + state.interval.size) %\n\t\t\tObject.entries(this.props.notes).length;\n\t\tlet answer = { ...this.props.notes[number] };\n\t\treturn { ...state, answer };\n\t}\n\n\thandleClick() {\n\t\tconst time = new Date().getTime();\n\t\tif (this.state.showAnswer) {\n\t\t\tthis.props.dispatch(updateFlashcardShownTime(time));\n\t\t\tthis.setState({\n\t\t\t\t...this.chooseNext(),\n\t\t\t\tshowAnswer: false,\n\t\t\t});\n\t\t} else {\n\t\t\tif (this.props.stats.flashcardShownTime) {\n\t\t\t\tconst probability = this.getNewProbability(this.props.stats, time);\n\t\t\t\tthis.props.dispatch(\n\t\t\t\t\tsavePreviousProbability(\n\t\t\t\t\t\tthis.state.note,\n\t\t\t\t\t\tthis.state.interval,\n\t\t\t\t\t\tthis.state.interval.probability\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tthis.props.dispatch(updateStats(time));\n\t\t\t\tthis.props.dispatch(\n\t\t\t\t\tupdateProbability(this.state.note, this.state.interval, probability)\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.setState({ showAnswer: true });\n\t\t}\n\t}\n\n\trender() {\n\t\tconst noteDetails = this.state.note ? this.state.note.name : null;\n\t\tconst intervalDetails = this.state.interval\n\t\t\t? this.state.interval.name\n\t\t\t: null;\n\t\tconst answerDetails = this.state.answer ? this.state.answer.name : null;\n\t\tlet answerClasses = \"answer hide\";\n\t\tlet flashcardClasses = \"border\";\n\t\tlet intervalClasses = \"interval lightgray\";\n\t\tif (this.state.showAnswer) {\n\t\t\tanswerClasses = \"answer show\";\n\t\t\tflashcardClasses = \"border bg-white text-dark\";\n\t\t\tintervalClasses = \"interval darkgray\";\n\t\t}\n\t\tif (this.props.viewControls) {\n\t\t\tflashcardClasses += \" hide\";\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid=\"flashcard\"\n\t\t\t\tclassName={flashcardClasses}\n\t\t\t\tonClick={this.handleClick}\n\t\t\t>\n\t\t\t\t<section className=\"note\">{noteDetails}</section>\n\t\t\t\t<section className={intervalClasses}>{intervalDetails}</section>\n\t\t\t\t<section className={answerClasses}>{answerDetails}</section>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps({ notes, viewControls, stats, history }) {\n\treturn { notes, viewControls, stats, history };\n}\n\nexport default connect(mapStateToProps)(Flashcard);\n","export const notes = [\n  { name: \"C\", number: 0 },\n  { name: \"Db\", number: 1 },\n  { name: \"D\", number: 2 },\n  { name: \"Eb\", number: 3 },\n  { name: \"E\", number: 4 },\n  { name: \"F\", number: 5 },\n  { name: \"Gb\", number: 6 },\n  { name: \"G\", number: 7 },\n  { name: \"Ab\", number: 8 },\n  { name: \"A\", number: 9 },\n  { name: \"Bb\", number: 10 },\n  { name: \"B\", number: 11 }\n];\n\nexport const intervals = [\n  { name: \"m2 \\u2197\", size: 1 },\n  { name: \"M2 \\u2197\", size: 2 },\n  { name: \"m3 \\u2197\", size: 3 },\n  { name: \"M3 \\u2197\", size: 4 },\n  { name: \"perf 4 \\u2197\", size: 5 },\n  { name: \"dim 5 \\u2197\", size: 6 },\n  { name: \"perf 5 \\u2197\", size: 7 },\n  { name: \"m6 \\u2197\", size: 8 },\n  { name: \"M6 \\u2197\", size: 9 },\n  { name: \"m7 \\u2197\", size: 10 },\n  { name: \"M7 \\u2197\", size: 11 }\n];\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { intervals, notes } from \"./config\";\n\nclass Results extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.buildChart = this.buildChart.bind(this);\n\t\tthis.getIntervalsForNote = this.getIntervalsForNote.bind(this);\n\t\tthis.getNewRow = this.getNewRow.bind(this);\n\t\tthis.getXAxis = this.getXAxis.bind(this);\n\t\tthis.getIntervalNames = this.getIntervalNames.bind(this);\n\t}\n\n\tbuildChart() {\n\t\tconsole.log(this.props.notes);\n\t\tlet output = [];\n\t\tfor (let i = 0; i < notes.length; i++) {\n\t\t\toutput.push(this.getNewRow(this.props.notes[i]));\n\t\t}\n\t\toutput.push(this.getXAxis());\n\n\t\treturn output;\n\t}\n\n\tgetIntervalsForNote(note) {\n\t\tlet output = [];\n\t\tconst notes = this.props.notes;\n\t\tconst intervalArray = Object.entries(notes[note.number].intervals).map(\n\t\t\t(el) => el[1]\n\t\t);\n\t\tconsole.log();\n\t\tfor (let i = 0, interval; i < intervalArray.length; i++) {\n\t\t\tinterval = intervalArray[i];\n\n\t\t\toutput.push(\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: numberToColorHsl(interval.probability * 100),\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"h-100 w-100 border p-0\"\n\t\t\t\t>\n\t\t\t\t\t~\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t}\n\n\tgetIntervalNames() {\n\t\tlet output = [];\n\t\tfor (let i = 0; i < intervals.length; i++) {\n\t\t\toutput.push(<b>{intervals[i].name}</b>);\n\t\t}\n\t\treturn output;\n\t}\n\n\tgetNewRow(note) {\n\t\treturn (\n\t\t\t<div className=\"d-flex justify-content-between\">\n\t\t\t\t<b>{note.name}:</b> {this.getIntervalsForNote(note)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetXAxis() {\n\t\treturn (\n\t\t\t<div className=\"d-flex justify-content-between\">\n\t\t\t\t<b className=\"hide\">X :</b> {this.getIntervalNames()}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn <div className=\"text-dark container\">{this.buildChart()}</div>;\n\t}\n}\n\nfunction mapStateToProps({ notes }) {\n\treturn { notes };\n}\n\nfunction hslToRgb(h, s, l) {\n\tvar r, g, b;\n\n\tif (s == 0) {\n\t\tr = g = b = l; // achromatic\n\t} else {\n\t\tfunction hue2rgb(p, q, t) {\n\t\t\tif (t < 0) t += 1;\n\t\t\tif (t > 1) t -= 1;\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\t\tif (t < 1 / 2) return q;\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n\t\t\treturn p;\n\t\t}\n\n\t\tvar q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tvar p = 2 * l - q;\n\t\tr = hue2rgb(p, q, h + 1 / 3);\n\t\tg = hue2rgb(p, q, h);\n\t\tb = hue2rgb(p, q, h - 1 / 3);\n\t}\n\n\treturn [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n}\n\n// convert a number to a color using hsl\nfunction numberToColorHsl(i) {\n\t// as the function expects a value between 0 and 1, and red = 0° and green = 120°\n\t// we convert the input to the appropriate hue value\n\tvar hue = (i * 1.2) / 360;\n\t// we convert hsl to rgb (saturation 100%, lightness 50%)\n\tvar rgb = hslToRgb(hue, 1, 0.5);\n\t// we format to css value and return\n\treturn \"rgb(\" + rgb[0] + \",\" + rgb[1] + \",\" + rgb[2] + \")\";\n}\n\nexport default connect(mapStateToProps)(Results);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateProbability } from \"./actions/index\";\nimport Results from \"./results\";\n\nclass Controls extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.getIntervals = this.getIntervals.bind(this);\n\t\tthis.expandedView = this.expandedView.bind(this);\n\t\tthis.getNotes = this.getNotes.bind(this);\n\t\tthis.updateIntervalList = this.updateIntervalList.bind(this);\n\t\tthis.updateNoteList = this.updateNoteList.bind(this);\n\t\tthis.isActiveInterval = this.isActiveInterval.bind(this);\n\t\tthis.isActiveNote = this.isActiveNote.bind(this);\n\t\tthis.state = {\n\t\t\tshow: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tsetTimeout(() => this.setState({ show: true }), 0);\n\t}\n\n\texpandedView() {\n\t\treturn (\n\t\t\t<div className=\"position-relative\">\n\t\t\t\t<small className=\"expanded border\" onClick={this.toggleView}>\n\t\t\t\t\tHide Controls\n\t\t\t\t</small>\n\t\t\t\t<ul className=\"mt-3\">{this.getIntervals()}</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetIntervals() {\n\t\tlet output = [];\n\t\tconst notes = this.props.notes;\n\t\tconst intervalArray = Object.entries(notes[0].intervals).map((el) => el[1]);\n\t\tfor (let i = 0, interval; i < intervalArray.length; i++) {\n\t\t\tinterval = intervalArray[i];\n\t\t\tconst { name } = interval;\n\t\t\tconst active = this.isActiveInterval(interval, notes);\n\t\t\toutput.push(\n\t\t\t\t<li key={name}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tdefaultChecked={active}\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonClick={() => this.handleIntervalClick(interval)}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor={name} className=\"pl-1\">\n\t\t\t\t\t\t{name}\n\t\t\t\t\t</label>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t}\n\n\tgetNotes() {\n\t\tlet output = [];\n\t\tconst noteArray = Object.entries(this.props.notes).map((el) => el[1]);\n\t\tfor (let i = 0, note; i < noteArray.length; i++) {\n\t\t\tnote = noteArray[i];\n\t\t\tconst { name } = note;\n\t\t\tconst active = this.isActiveNote(note);\n\t\t\toutput.push(\n\t\t\t\t<li key={name}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tdefaultChecked={active}\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonClick={() => this.handleNoteClick(note)}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor={name} className=\"pl-1\">\n\t\t\t\t\t\t{name}\n\t\t\t\t\t</label>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t}\n\n\thandleIntervalClick(interval) {\n\t\tthis.updateIntervalList(interval);\n\t}\n\n\thandleNoteClick(note) {\n\t\tthis.updateNoteList(note);\n\t}\n\n\tisActiveInterval(interval, notes) {\n\t\tconst intervalArray = Object.entries(notes).map(\n\t\t\t(el) => el[1].intervals[interval.size]\n\t\t);\n\n\t\tfor (let i = 0; i < intervalArray.length; i++) {\n\t\t\tif (intervalArray[i].probability > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tisActiveNote(note) {\n\t\tconst intervalArray = Object.entries(note.intervals).map((el) => el[1]);\n\t\tfor (let i = 0; i < intervalArray.length; i++) {\n\t\t\tif (intervalArray[i].probability > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\trender() {\n\t\tlet classes;\n\t\tif (this.state.show) {\n\t\t\tclasses = \"bg-light text-dark\";\n\t\t} else {\n\t\t\tclasses = \"container\";\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"controls-view\">\n\t\t\t\t<section id=\"controls\" className={classes}>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t\t<b className=\"\">Intervals</b>\n\t\t\t\t\t\t\t\t<ul className=\"mt-3\">{this.getIntervals()}</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t\t<b className=\"\">Notes</b>\n\t\t\t\t\t\t\t\t<ul className=\"mt-3\">{this.getNotes()}</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<Results />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tupdateIntervalList(interval) {\n\t\tconst notes = this.props.notes;\n\t\tconst notesArr = Object.entries(notes).map((el) => el[1]);\n\t\tconst p = this.isActiveInterval(interval, notes) ? 0 : 0.5;\n\t\tfor (let i = 0; i < notesArr.length; i++) {\n\t\t\tif (this.isActiveNote(notesArr[i])) {\n\t\t\t\tthis.props.dispatch(updateProbability(notesArr[i], interval, p));\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateNoteList(note) {\n\t\tconst intervalArr = Object.entries(note.intervals).map((el) => el[1]);\n\t\tconst p = this.isActiveNote(note) ? 0 : 0.5;\n\t\tfor (let i = 0; i < intervalArr.length; i++) {\n\t\t\tif (this.isActiveInterval(intervalArr[i], this.props.notes)) {\n\t\t\t\tthis.props.dispatch(updateProbability(note, intervalArr[i], p));\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction mapStateToProps({ notes, viewControls }) {\n\treturn { notes, viewControls };\n}\n\nexport default connect(mapStateToProps)(Controls);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { startTime, updateTime } from \"./actions/index\";\n\nclass Stopwatch extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tinterval: null,\n\t\t\tcolor: \"#fff\",\n\t\t};\n\t\tthis.changeColor = this.changeColor.bind(this);\n\t}\n\n\tchangeColor() {\n\t\tlet r = Math.floor(Math.random() * 6);\n\t\tlet color;\n\t\tif (r === this.state.color) {\n\t\t\tr = (r + 1) % 6;\n\t\t}\n\t\tconsole.log(\"r=\", r);\n\t\tswitch (r) {\n\t\t\tcase 0:\n\t\t\t\tcolor = \"#007bff\";\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tcolor = \"#28a745\";\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcolor = \"#dc3545\";\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tcolor = \"#ffc107\";\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tcolor = \"#17A2BD\";\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\tdefault:\n\t\t\t\tcolor = \"#fff\";\n\t\t}\n\t\tthis.setState({ color });\n\t}\n\n\tcomponentDidMount() {\n\t\t//TODO: make this tick every 100ms\n\t\t//TODO: This won't work if the session goes through midnight\n\t\tthis.setState({\n\t\t\tinterval: setInterval(\n\t\t\t\t() => this.props.dispatch(updateTime(new Date().getTime())),\n\t\t\t\t100\n\t\t\t),\n\t\t});\n\t\tthis.props.dispatch(startTime(new Date().getTime()));\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconst currentValue = Math.round(\n\t\t\t(this.props.time.currentTime - this.props.time.start) / 1000\n\t\t);\n\t\tconst prevValue = Math.round(\n\t\t\t(prevProps.time.currentTime - prevProps.time.start) / 1000\n\t\t);\n\t\tif (Math.floor(currentValue / 60) !== Math.floor(prevValue / 60)) {\n\t\t\tthis.changeColor();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.state.interval);\n\t\t//TODO: Clear redux store data too on unmount\n\t}\n\n\trender() {\n\t\tconst value = Math.round(\n\t\t\t(this.props.time.currentTime - this.props.time.start) / 1000\n\t\t);\n\t\tconst seconds = value % 60;\n\t\tconst minutes = Math.floor(value / 60);\n\t\tconst zero = seconds < 10 ? 0 : \"\";\n\t\treturn (\n\t\t\t<time id=\"timer\" className=\"border py-3\">\n\t\t\t\t<code style={{ color: this.state.color }}>\n\t\t\t\t\t{minutes}:{zero}\n\t\t\t\t\t{seconds}\n\t\t\t\t</code>\n\t\t\t</time>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps({ notes, viewControls, time }) {\n\treturn { notes, viewControls, time };\n}\n\nexport default connect(mapStateToProps)(Stopwatch);\n","import React from \"react\";\nimport Flashcard from \"./flashcard\";\nimport Controls from \"./controls\";\nimport Stopwatch from \"./stopwatch\";\nimport { connect } from \"react-redux\";\nimport { toggleControls, updateProbability } from \"./actions/index\";\nimport \"./App.css\";\n\nclass Oops extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\toops: false,\n\t\t};\n\t\tthis.handleOopsClick = this.handleOopsClick.bind(this);\n\t}\n\n\thandleOopsClick() {\n\t\tthis.setState({ oops: true });\n\t\tif (this.props.history.note) {\n\t\t\tthis.props.dispatch(\n\t\t\t\tupdateProbability(\n\t\t\t\t\tthis.props.history.note,\n\t\t\t\t\tthis.props.history.interval,\n\t\t\t\t\tthis.props.history.probability\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (\n\t\t\tprevProps.history.note !== this.props.history.note ||\n\t\t\tprevProps.history.interval !== this.props.history.interval ||\n\t\t\tprevProps.history.probability !== this.props.history.probability\n\t\t) {\n\t\t\tthis.setState({ oops: false });\n\t\t}\n\t}\n\n\trender() {\n\t\tlet oopsClasses = !this.state.oops\n\t\t\t? \"border p-3 py-4 mr-4 mr-md-5 smooth ml-0\"\n\t\t\t: \"border tiny smooth\";\n\t\tlet text = this.state.oops ? \"\" : \"Oops?\";\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={oopsClasses} onClick={this.handleOopsClick} id=\"oops\">\n\t\t\t\t\t{text}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"placeholder border p-3 mr-4 mr-md-5 hide\">Oops?</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps({ history }) {\n\treturn { history };\n}\n\nexport default connect(mapStateToProps)(Oops);\n","import React from \"react\";\nimport Flashcard from \"./flashcard\";\nimport Controls from \"./controls\";\nimport Oops from \"./oops\";\nimport Stopwatch from \"./stopwatch\";\nimport { connect } from \"react-redux\";\nimport { toggleControls, updateProbability } from \"./actions/index\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.show = this.show.bind(this);\n\t}\n\n\tshow() {\n\t\treturn this.props.viewControls ? (\n\t\t\t<Controls />\n\t\t) : (\n\t\t\t<div className=\"d-block\">\n\t\t\t\t<div className=\"d-flex align-items-center mb-4\">\n\t\t\t\t\t<Oops />\n\t\t\t\t\t<Flashcard />\n\t\t\t\t</div>\n\t\t\t\t<Stopwatch />\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst buttonText = this.props.viewControls\n\t\t\t? \"Hide Controls\"\n\t\t\t: \"Show Controls\";\n\t\tconst appClasses = this.props.viewControls ? \"App bg-light\" : \"App\";\n\t\treturn (\n\t\t\t<div className={appClasses}>\n\t\t\t\t<nav className=\"text-left pt-3 container position-relative\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\tonClick={() => this.props.dispatch(toggleControls())}\n\t\t\t\t\t>\n\t\t\t\t\t\t{buttonText}\n\t\t\t\t\t</button>\n\t\t\t\t</nav>\n\t\t\t\t<main className=\"app-main\">{this.show()}</main>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps({ viewControls }) {\n\treturn { viewControls };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\nimport notesReducer from \"./reducer_notes\";\nimport viewControlsReducer from \"./reducer_viewControls\";\nimport timeReducer from \"./reducer_time\";\nimport historyReducer from \"./reducer_history\";\nimport statsReducer from \"./reducer_stats\";\n\nconst rootReducer = combineReducers({\n\tnotes: notesReducer,\n\tviewControls: viewControlsReducer,\n\ttime: timeReducer,\n\tstats: statsReducer,\n\thistory: historyReducer,\n});\n\nexport default rootReducer;\n","import { UPDATE_PROBABILITY } from \"../actions/index\";\n\nexport default function (state = null, action) {\n\tswitch (action.type) {\n\t\tcase UPDATE_PROBABILITY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[action.payload.note.number]: {\n\t\t\t\t\t...state[action.payload.note.number],\n\t\t\t\t\tintervals: {\n\t\t\t\t\t\t...state[action.payload.note.number].intervals,\n\t\t\t\t\t\t[action.payload.interval.size]: {\n\t\t\t\t\t\t\t...action.payload.interval,\n\t\t\t\t\t\t\tprobability: action.payload.probability,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n}\n","import { TOGGLE_CONTROLS } from \"../actions/index\";\n\nexport default function (state = null, action) {\n\tswitch (action.type) {\n\t\tcase TOGGLE_CONTROLS:\n\t\t\treturn !state;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { UPDATE_TIME, START_TIME } from \"../actions/index\";\n\nexport default function (state = null, action) {\n\tswitch (action.type) {\n\t\tcase START_TIME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstart: action.payload,\n\t\t\t};\n\n\t\tcase UPDATE_TIME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentTime: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n}\n","import { UPDATE_STATS, UPDATE_FLASHCARD_SHOWN_TIME } from \"../actions/index\";\nimport {\n\tgetResponseTime,\n\tgetSampleMean,\n\tgetSampleVariance,\n\tgetResponseDeviation,\n\tgetAlpha,\n\tgetBeta,\n} from \"../statistics.js\";\n\nexport default function (state = null, action) {\n\tswitch (action.type) {\n\t\tcase UPDATE_FLASHCARD_SHOWN_TIME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tflashcardShownTime: action.payload,\n\t\t\t};\n\t\tcase UPDATE_STATS:\n\t\t\tconst responseTime = getResponseTime(state, action.payload.time);\n\t\t\tconst sampleMean = getSampleMean(state, responseTime);\n\t\t\tconst responseDeviation = getResponseDeviation(state, responseTime);\n\t\t\tconst sampleVariance = getSampleVariance(state, responseDeviation);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstart: state.start,\n\t\t\t\tresponseTime,\n\t\t\t\tsumResponseTime: responseTime + state.sumResponseTime,\n\t\t\t\tnumResponses: state.numResponses + action.payload.numResponses,\n\t\t\t\tsampleMean,\n\t\t\t\tresponseDeviation,\n\t\t\t\tsumTestVariance: state.sumTestVariance + responseDeviation,\n\t\t\t\tsampleVariance,\n\t\t\t\talpha: getAlpha(sampleMean, sampleVariance),\n\t\t\t\tbeta: getBeta(sampleMean, sampleVariance),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n}\n","import { SAVE_PREVIOUS_PROBABILITY } from \"../actions/index\";\n\nexport default function (state = null, action) {\n\tswitch (action.type) {\n\t\tcase SAVE_PREVIOUS_PROBABILITY:\n\t\t\treturn { ...action.payload };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reducers from \"./reducers\";\nimport { intervals, notes } from \"./config\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(reducers, getInitialState());\n\nfunction getInitialState() {\n\tlet notesMap = {};\n\tfor (let i = 0; i < notes.length; i++) {\n\t\tlet intervalMap = {};\n\t\tfor (let i = 0; i < intervals.length; i++) {\n\t\t\tconst interval = intervals[i];\n\t\t\tintervalMap[interval.size] = {\n\t\t\t\tname: interval.name,\n\t\t\t\tsize: interval.size,\n\t\t\t\tprobability: 0.5,\n\t\t\t};\n\t\t}\n\t\tconst note = notes[i];\n\t\tnotesMap[note.number] = {\n\t\t\tname: note.name,\n\t\t\tnumber: note.number,\n\t\t\tintervals: intervalMap,\n\t\t};\n\t}\n\treturn {\n\t\tnotes: notesMap,\n\t\tviewControls: false,\n\t\ttime: {\n\t\t\tstart: null,\n\t\t\tcurrentTime: null,\n\t\t},\n\t\tstats: {\n\t\t\tresponseTime: null,\n\t\t\tsumResponseTime: 0,\n\t\t\tnumResponses: 0,\n\t\t\tsampleMean: 5000,\n\t\t\tflashcardShownTime: null,\n\t\t\ttestVariance: 0,\n\t\t\tsumTestVariance: 0,\n\t\t\tsampleVariance: 6250000,\n\t\t\talpha: 4,\n\t\t\tbeta: 0.0008,\n\t\t},\n\t\thistory: { note: null, interval: null, probability: null },\n\t};\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}