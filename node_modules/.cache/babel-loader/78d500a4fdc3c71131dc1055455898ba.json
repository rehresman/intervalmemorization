{"ast":null,"code":"var _jsxFileName = \"/Users/ryanehresman/Documents/JS/create-react-app-next/musicstudy/src/controls.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateProbability } from \"./actions/index\";\nimport Results from \"./results\";\n\nclass Controls extends React.Component {\n  constructor() {\n    super();\n    this.getIntervals = this.getIntervals.bind(this);\n    this.expandedView = this.expandedView.bind(this);\n    this.getNotes = this.getNotes.bind(this);\n    this.updateIntervalList = this.updateIntervalList.bind(this);\n    this.updateNoteList = this.updateNoteList.bind(this);\n    this.isActiveInterval = this.isActiveInterval.bind(this);\n    this.isActiveNote = this.isActiveNote.bind(this);\n    this.state = {\n      show: false\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.setState({\n      show: true\n    }), 0);\n  }\n\n  expandedView() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"position-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"expanded border\",\n      onClick: this.toggleView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, \"Hide Controls\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, this.getIntervals()));\n  }\n\n  getIntervals() {\n    let output = [];\n    const notes = this.props.notes;\n    const intervalArray = Object.entries(notes[0].intervals).map(el => el[1]);\n\n    for (let i = 0, interval; i < intervalArray.length; i++) {\n      interval = intervalArray[i];\n      const {\n        name\n      } = interval;\n      const active = this.isActiveInterval(interval, notes);\n      output.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: active,\n        value: name,\n        onClick: () => this.handleIntervalClick(interval),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: name,\n        className: \"pl-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }\n      }, name)));\n    }\n\n    return output;\n  }\n\n  getNotes() {\n    let output = [];\n    const noteArray = Object.entries(this.props.notes).map(el => el[1]);\n\n    for (let i = 0, note; i < noteArray.length; i++) {\n      note = noteArray[i];\n      const {\n        name\n      } = note;\n      const active = this.isActiveNote(note);\n      output.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: active,\n        value: name,\n        onClick: () => this.handleNoteClick(note),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: name,\n        className: \"pl-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }\n      }, name)));\n    }\n\n    return output;\n  }\n\n  handleIntervalClick(interval) {\n    this.updateIntervalList(interval);\n  }\n\n  handleNoteClick(note) {\n    this.updateNoteList(note);\n  }\n\n  isActiveInterval(interval, notes) {\n    const intervalArray = Object.entries(notes).map(el => el[1].intervals[interval.size]);\n\n    for (let i = 0; i < intervalArray.length; i++) {\n      if (intervalArray[i].probability > 0) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  isActiveNote(note) {\n    const intervalArray = Object.entries(note.intervals).map(el => el[1]);\n\n    for (let i = 0; i < intervalArray.length; i++) {\n      if (intervalArray[i].probability > 0) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  render() {\n    let classes;\n\n    if (this.state.show) {\n      classes = \"bg-light text-dark\";\n    } else {\n      classes = \"container\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      id: \"controls\",\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, \"Intervals\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, this.getIntervals())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, \"Notes\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, this.getNotes()))))), /*#__PURE__*/React.createElement(Results, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  updateIntervalList(interval) {\n    const notes = this.props.notes;\n    const notesArr = Object.entries(notes).map(el => el[1]);\n    const p = this.isActiveInterval(interval, notes) ? 0 : 0.5;\n\n    for (let i = 0; i < notesArr.length; i++) {\n      if (this.isActiveNote(notesArr[i])) {\n        this.props.dispatch(updateProbability(notesArr[i], interval, p));\n      }\n    }\n  }\n\n  updateNoteList(note) {\n    const intervalArr = Object.entries(note.intervals).map(el => el[1]);\n    const p = this.isActiveNote(note) ? 0 : 0.5;\n\n    for (let i = 0; i < intervalArr.length; i++) {\n      if (this.isActiveInterval(intervalArr[i], this.props.notes)) {\n        this.props.dispatch(updateProbability(note, intervalArr[i], p));\n      }\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  notes,\n  viewControls\n}) {\n  return {\n    notes,\n    viewControls\n  };\n}\n\nexport default connect(mapStateToProps)(Controls);","map":{"version":3,"sources":["/Users/ryanehresman/Documents/JS/create-react-app-next/musicstudy/src/controls.js"],"names":["React","connect","updateProbability","Results","Controls","Component","constructor","getIntervals","bind","expandedView","getNotes","updateIntervalList","updateNoteList","isActiveInterval","isActiveNote","state","show","componentDidMount","setTimeout","setState","toggleView","output","notes","props","intervalArray","Object","entries","intervals","map","el","i","interval","length","name","active","push","handleIntervalClick","noteArray","note","handleNoteClick","size","probability","render","classes","notesArr","p","dispatch","intervalArr","mapStateToProps","viewControls"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateProbability } from \"./actions/index\";\nimport Results from \"./results\";\n\nclass Controls extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.getIntervals = this.getIntervals.bind(this);\n\t\tthis.expandedView = this.expandedView.bind(this);\n\t\tthis.getNotes = this.getNotes.bind(this);\n\t\tthis.updateIntervalList = this.updateIntervalList.bind(this);\n\t\tthis.updateNoteList = this.updateNoteList.bind(this);\n\t\tthis.isActiveInterval = this.isActiveInterval.bind(this);\n\t\tthis.isActiveNote = this.isActiveNote.bind(this);\n\t\tthis.state = {\n\t\t\tshow: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tsetTimeout(() => this.setState({ show: true }), 0);\n\t}\n\n\texpandedView() {\n\t\treturn (\n\t\t\t<div className=\"position-relative\">\n\t\t\t\t<small className=\"expanded border\" onClick={this.toggleView}>\n\t\t\t\t\tHide Controls\n\t\t\t\t</small>\n\t\t\t\t<ul className=\"mt-3\">{this.getIntervals()}</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetIntervals() {\n\t\tlet output = [];\n\t\tconst notes = this.props.notes;\n\t\tconst intervalArray = Object.entries(notes[0].intervals).map((el) => el[1]);\n\t\tfor (let i = 0, interval; i < intervalArray.length; i++) {\n\t\t\tinterval = intervalArray[i];\n\t\t\tconst { name } = interval;\n\t\t\tconst active = this.isActiveInterval(interval, notes);\n\t\t\toutput.push(\n\t\t\t\t<li key={name}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tdefaultChecked={active}\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonClick={() => this.handleIntervalClick(interval)}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor={name} className=\"pl-1\">\n\t\t\t\t\t\t{name}\n\t\t\t\t\t</label>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t}\n\n\tgetNotes() {\n\t\tlet output = [];\n\t\tconst noteArray = Object.entries(this.props.notes).map((el) => el[1]);\n\t\tfor (let i = 0, note; i < noteArray.length; i++) {\n\t\t\tnote = noteArray[i];\n\t\t\tconst { name } = note;\n\t\t\tconst active = this.isActiveNote(note);\n\t\t\toutput.push(\n\t\t\t\t<li key={name}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tdefaultChecked={active}\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonClick={() => this.handleNoteClick(note)}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor={name} className=\"pl-1\">\n\t\t\t\t\t\t{name}\n\t\t\t\t\t</label>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t}\n\n\thandleIntervalClick(interval) {\n\t\tthis.updateIntervalList(interval);\n\t}\n\n\thandleNoteClick(note) {\n\t\tthis.updateNoteList(note);\n\t}\n\n\tisActiveInterval(interval, notes) {\n\t\tconst intervalArray = Object.entries(notes).map(\n\t\t\t(el) => el[1].intervals[interval.size]\n\t\t);\n\n\t\tfor (let i = 0; i < intervalArray.length; i++) {\n\t\t\tif (intervalArray[i].probability > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tisActiveNote(note) {\n\t\tconst intervalArray = Object.entries(note.intervals).map((el) => el[1]);\n\t\tfor (let i = 0; i < intervalArray.length; i++) {\n\t\t\tif (intervalArray[i].probability > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\trender() {\n\t\tlet classes;\n\t\tif (this.state.show) {\n\t\t\tclasses = \"bg-light text-dark\";\n\t\t} else {\n\t\t\tclasses = \"container\";\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<section id=\"controls\" className={classes}>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t\t<b className=\"\">Intervals</b>\n\t\t\t\t\t\t\t\t<ul className=\"mt-3\">{this.getIntervals()}</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t\t<b className=\"\">Notes</b>\n\t\t\t\t\t\t\t\t<ul className=\"mt-3\">{this.getNotes()}</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<Results />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tupdateIntervalList(interval) {\n\t\tconst notes = this.props.notes;\n\t\tconst notesArr = Object.entries(notes).map((el) => el[1]);\n\t\tconst p = this.isActiveInterval(interval, notes) ? 0 : 0.5;\n\t\tfor (let i = 0; i < notesArr.length; i++) {\n\t\t\tif (this.isActiveNote(notesArr[i])) {\n\t\t\t\tthis.props.dispatch(updateProbability(notesArr[i], interval, p));\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateNoteList(note) {\n\t\tconst intervalArr = Object.entries(note.intervals).map((el) => el[1]);\n\t\tconst p = this.isActiveNote(note) ? 0 : 0.5;\n\t\tfor (let i = 0; i < intervalArr.length; i++) {\n\t\t\tif (this.isActiveInterval(intervalArr[i], this.props.notes)) {\n\t\t\t\tthis.props.dispatch(updateProbability(note, intervalArr[i], p));\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction mapStateToProps({ notes, viewControls }) {\n\treturn { notes, viewControls };\n}\n\nexport default connect(mapStateToProps)(Controls);\n"]},"metadata":{},"sourceType":"module"}