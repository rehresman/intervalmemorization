{"ast":null,"code":"var _jsxFileName = \"/Users/ryanehresman/Documents/JS/create-react-app-next/musicstudy/intervalmemorization/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reducers from \"./reducers\";\nimport { intervals, notes } from \"./config\";\nimport * as serviceWorker from \"./serviceWorker\";\nconst store = createStore(reducers, getInitialState());\n\nfunction getInitialState() {\n  let notesMap = {};\n\n  for (let i = 0; i < notes.length; i++) {\n    let intervalMap = {};\n\n    for (let i = 0; i < intervals.length; i++) {\n      const interval = intervals[i];\n      intervalMap[interval.size] = {\n        name: interval.name,\n        size: interval.size,\n        probability: 0.5\n      };\n    }\n\n    const note = notes[i];\n    notesMap[note.number] = {\n      name: note.name,\n      number: note.number,\n      intervals: intervalMap\n    };\n  }\n\n  return {\n    notes: notesMap,\n    viewControls: false,\n    time: {\n      start: null,\n      currentTime: null\n    },\n    stats: {\n      responseTime: null,\n      sumResponseTime: 0,\n      numResponses: 0,\n      sampleMean: 5000,\n      flashcardShownTime: null,\n      testVariance: 0,\n      sumTestVariance: 0,\n      sampleVariance: 6250000,\n      alpha: 4,\n      beta: 0.0008\n    },\n    history: {\n      note: null,\n      interval: null,\n      probability: null\n    }\n  };\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 4\n  }\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/ryanehresman/Documents/JS/create-react-app-next/musicstudy/intervalmemorization/src/index.js"],"names":["React","ReactDOM","Provider","createStore","App","reducers","intervals","notes","serviceWorker","store","getInitialState","notesMap","i","length","intervalMap","interval","size","name","probability","note","number","viewControls","time","start","currentTime","stats","responseTime","sumResponseTime","numResponses","sampleMean","flashcardShownTime","testVariance","sumTestVariance","sampleVariance","alpha","beta","history","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,UAAjC;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,KAAK,GAAGN,WAAW,CAACE,QAAD,EAAWK,eAAe,EAA1B,CAAzB;;AAEA,SAASA,eAAT,GAA2B;AAC1B,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACtC,QAAIE,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,SAAS,CAACO,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AAC1C,YAAMG,QAAQ,GAAGT,SAAS,CAACM,CAAD,CAA1B;AACAE,MAAAA,WAAW,CAACC,QAAQ,CAACC,IAAV,CAAX,GAA6B;AAC5BC,QAAAA,IAAI,EAAEF,QAAQ,CAACE,IADa;AAE5BD,QAAAA,IAAI,EAAED,QAAQ,CAACC,IAFa;AAG5BE,QAAAA,WAAW,EAAE;AAHe,OAA7B;AAKA;;AACD,UAAMC,IAAI,GAAGZ,KAAK,CAACK,CAAD,CAAlB;AACAD,IAAAA,QAAQ,CAACQ,IAAI,CAACC,MAAN,CAAR,GAAwB;AACvBH,MAAAA,IAAI,EAAEE,IAAI,CAACF,IADY;AAEvBG,MAAAA,MAAM,EAAED,IAAI,CAACC,MAFU;AAGvBd,MAAAA,SAAS,EAAEQ;AAHY,KAAxB;AAKA;;AACD,SAAO;AACNP,IAAAA,KAAK,EAAEI,QADD;AAENU,IAAAA,YAAY,EAAE,KAFR;AAGNC,IAAAA,IAAI,EAAE;AACLC,MAAAA,KAAK,EAAE,IADF;AAELC,MAAAA,WAAW,EAAE;AAFR,KAHA;AAONC,IAAAA,KAAK,EAAE;AACNC,MAAAA,YAAY,EAAE,IADR;AAENC,MAAAA,eAAe,EAAE,CAFX;AAGNC,MAAAA,YAAY,EAAE,CAHR;AAINC,MAAAA,UAAU,EAAE,IAJN;AAKNC,MAAAA,kBAAkB,EAAE,IALd;AAMNC,MAAAA,YAAY,EAAE,CANR;AAONC,MAAAA,eAAe,EAAE,CAPX;AAQNC,MAAAA,cAAc,EAAE,OARV;AASNC,MAAAA,KAAK,EAAE,CATD;AAUNC,MAAAA,IAAI,EAAE;AAVA,KAPD;AAmBNC,IAAAA,OAAO,EAAE;AAAEjB,MAAAA,IAAI,EAAE,IAAR;AAAcJ,MAAAA,QAAQ,EAAE,IAAxB;AAA8BG,MAAAA,WAAW,EAAE;AAA3C;AAnBH,GAAP;AAqBA;;AAEDjB,QAAQ,CAACoC,MAAT,eACC,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAE5B,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,CADD,EAMC6B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAND,E,CASA;AACA;AACA;;AACA/B,aAAa,CAACgC,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reducers from \"./reducers\";\nimport { intervals, notes } from \"./config\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(reducers, getInitialState());\n\nfunction getInitialState() {\n\tlet notesMap = {};\n\tfor (let i = 0; i < notes.length; i++) {\n\t\tlet intervalMap = {};\n\t\tfor (let i = 0; i < intervals.length; i++) {\n\t\t\tconst interval = intervals[i];\n\t\t\tintervalMap[interval.size] = {\n\t\t\t\tname: interval.name,\n\t\t\t\tsize: interval.size,\n\t\t\t\tprobability: 0.5,\n\t\t\t};\n\t\t}\n\t\tconst note = notes[i];\n\t\tnotesMap[note.number] = {\n\t\t\tname: note.name,\n\t\t\tnumber: note.number,\n\t\t\tintervals: intervalMap,\n\t\t};\n\t}\n\treturn {\n\t\tnotes: notesMap,\n\t\tviewControls: false,\n\t\ttime: {\n\t\t\tstart: null,\n\t\t\tcurrentTime: null,\n\t\t},\n\t\tstats: {\n\t\t\tresponseTime: null,\n\t\t\tsumResponseTime: 0,\n\t\t\tnumResponses: 0,\n\t\t\tsampleMean: 5000,\n\t\t\tflashcardShownTime: null,\n\t\t\ttestVariance: 0,\n\t\t\tsumTestVariance: 0,\n\t\t\tsampleVariance: 6250000,\n\t\t\talpha: 4,\n\t\t\tbeta: 0.0008,\n\t\t},\n\t\thistory: { note: null, interval: null, probability: null },\n\t};\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}