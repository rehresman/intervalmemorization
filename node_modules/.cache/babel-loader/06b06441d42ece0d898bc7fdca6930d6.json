{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom\";import{Provider}from\"react-redux\";import{createStore}from\"redux\";import\"./index.css\";import App from\"./App\";import reducers from\"./reducers\";import{intervals,notes}from\"./config\";import*as serviceWorker from\"./serviceWorker\";var store=createStore(reducers,getInitialState());function getInitialState(){var notesMap={};for(var i=0;i<notes.length;i++){var intervalMap={};for(var _i=0;_i<intervals.length;_i++){var interval=intervals[_i];intervalMap[interval.size]={name:interval.name,size:interval.size,probability:0.5};}var note=notes[i];notesMap[note.number]={name:note.name,number:note.number,intervals:intervalMap};}return{notes:notesMap,viewControls:false,time:{start:null,currentTime:null},stats:{responseTime:null,sumResponseTime:0,numResponses:0,sampleMean:5000,flashcardShownTime:null,testVariance:0,sumTestVariance:0,sampleVariance:6250000,alpha:4,beta:0.0008},history:{note:null,interval:null,probability:null}};}ReactDOM.render(/*#__PURE__*/React.createElement(React.StrictMode,null,/*#__PURE__*/React.createElement(Provider,{store:store},/*#__PURE__*/React.createElement(App,null))),document.getElementById(\"root\"));// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/ryanehresman/Documents/JS/create-react-app-next/musicstudy/src/index.js"],"names":["React","ReactDOM","Provider","createStore","App","reducers","intervals","notes","serviceWorker","store","getInitialState","notesMap","i","length","intervalMap","interval","size","name","probability","note","number","viewControls","time","start","currentTime","stats","responseTime","sumResponseTime","numResponses","sampleMean","flashcardShownTime","testVariance","sumTestVariance","sampleVariance","alpha","beta","history","render","document","getElementById","unregister"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,WAAT,KAA4B,OAA5B,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,SAAT,CAAoBC,KAApB,KAAiC,UAAjC,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CAEA,GAAMC,CAAAA,KAAK,CAAGN,WAAW,CAACE,QAAD,CAAWK,eAAe,EAA1B,CAAzB,CAEA,QAASA,CAAAA,eAAT,EAA2B,CAC1B,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,KAAK,CAACM,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACtC,GAAIE,CAAAA,WAAW,CAAG,EAAlB,CACA,IAAK,GAAIF,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAGN,SAAS,CAACO,MAA9B,CAAsCD,EAAC,EAAvC,CAA2C,CAC1C,GAAMG,CAAAA,QAAQ,CAAGT,SAAS,CAACM,EAAD,CAA1B,CACAE,WAAW,CAACC,QAAQ,CAACC,IAAV,CAAX,CAA6B,CAC5BC,IAAI,CAAEF,QAAQ,CAACE,IADa,CAE5BD,IAAI,CAAED,QAAQ,CAACC,IAFa,CAG5BE,WAAW,CAAE,GAHe,CAA7B,CAKA,CACD,GAAMC,CAAAA,IAAI,CAAGZ,KAAK,CAACK,CAAD,CAAlB,CACAD,QAAQ,CAACQ,IAAI,CAACC,MAAN,CAAR,CAAwB,CACvBH,IAAI,CAAEE,IAAI,CAACF,IADY,CAEvBG,MAAM,CAAED,IAAI,CAACC,MAFU,CAGvBd,SAAS,CAAEQ,WAHY,CAAxB,CAKA,CACD,MAAO,CACNP,KAAK,CAAEI,QADD,CAENU,YAAY,CAAE,KAFR,CAGNC,IAAI,CAAE,CACLC,KAAK,CAAE,IADF,CAELC,WAAW,CAAE,IAFR,CAHA,CAONC,KAAK,CAAE,CACNC,YAAY,CAAE,IADR,CAENC,eAAe,CAAE,CAFX,CAGNC,YAAY,CAAE,CAHR,CAINC,UAAU,CAAE,IAJN,CAKNC,kBAAkB,CAAE,IALd,CAMNC,YAAY,CAAE,CANR,CAONC,eAAe,CAAE,CAPX,CAQNC,cAAc,CAAE,OARV,CASNC,KAAK,CAAE,CATD,CAUNC,IAAI,CAAE,MAVA,CAPD,CAmBNC,OAAO,CAAE,CAAEjB,IAAI,CAAE,IAAR,CAAcJ,QAAQ,CAAE,IAAxB,CAA8BG,WAAW,CAAE,IAA3C,CAnBH,CAAP,CAqBA,CAEDjB,QAAQ,CAACoC,MAAT,cACC,oBAAC,KAAD,CAAO,UAAP,mBACC,oBAAC,QAAD,EAAU,KAAK,CAAE5B,KAAjB,eACC,oBAAC,GAAD,MADD,CADD,CADD,CAMC6B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAND,EASA;AACA;AACA;AACA/B,aAAa,CAACgC,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reducers from \"./reducers\";\nimport { intervals, notes } from \"./config\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(reducers, getInitialState());\n\nfunction getInitialState() {\n\tlet notesMap = {};\n\tfor (let i = 0; i < notes.length; i++) {\n\t\tlet intervalMap = {};\n\t\tfor (let i = 0; i < intervals.length; i++) {\n\t\t\tconst interval = intervals[i];\n\t\t\tintervalMap[interval.size] = {\n\t\t\t\tname: interval.name,\n\t\t\t\tsize: interval.size,\n\t\t\t\tprobability: 0.5,\n\t\t\t};\n\t\t}\n\t\tconst note = notes[i];\n\t\tnotesMap[note.number] = {\n\t\t\tname: note.name,\n\t\t\tnumber: note.number,\n\t\t\tintervals: intervalMap,\n\t\t};\n\t}\n\treturn {\n\t\tnotes: notesMap,\n\t\tviewControls: false,\n\t\ttime: {\n\t\t\tstart: null,\n\t\t\tcurrentTime: null,\n\t\t},\n\t\tstats: {\n\t\t\tresponseTime: null,\n\t\t\tsumResponseTime: 0,\n\t\t\tnumResponses: 0,\n\t\t\tsampleMean: 5000,\n\t\t\tflashcardShownTime: null,\n\t\t\ttestVariance: 0,\n\t\t\tsumTestVariance: 0,\n\t\t\tsampleVariance: 6250000,\n\t\t\talpha: 4,\n\t\t\tbeta: 0.0008,\n\t\t},\n\t\thistory: { note: null, interval: null, probability: null },\n\t};\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}