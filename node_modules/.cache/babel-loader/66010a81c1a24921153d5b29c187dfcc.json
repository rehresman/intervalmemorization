{"ast":null,"code":"var _jsxFileName = \"/Users/ryanehresman/Documents/JS/create-react-app-next/musicstudy/src/results.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { intervals, notes } from \"./config\";\n\nclass Results extends React.Component {\n  constructor() {\n    super();\n    this.buildChart = this.buildChart.bind(this);\n    this.getIntervalsForNote = this.getIntervalsForNote.bind(this);\n  }\n\n  buildChart() {\n    console.log(this.props.notes);\n    let output = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      output.push(this.getIntervalsForNote(this.props.notes[i]));\n    }\n  }\n\n  getIntervalsForNote(note) {\n    let output = [];\n    const notes = this.props.notes;\n    const intervalArray = Object.entries(notes[note].intervals).map(el => el[1]);\n\n    for (let i = 0, interval; i < intervalArray.length; i++) {\n      interval = intervalArray[i];\n      output.push( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }\n      }, this.props.notes[note].name, \",\", this.props.intervals[interval].name, \",\", this.props.intervals[interval].probability));\n    }\n\n    return output;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 10\n      }\n    }, this.buildChart());\n  }\n\n}\n\nfunction mapStateToProps({\n  notes\n}) {\n  return {\n    notes\n  };\n}\n\nexport default connect(mapStateToProps)(Results);","map":{"version":3,"sources":["/Users/ryanehresman/Documents/JS/create-react-app-next/musicstudy/src/results.js"],"names":["React","connect","intervals","notes","Results","Component","constructor","buildChart","bind","getIntervalsForNote","console","log","props","output","i","length","push","note","intervalArray","Object","entries","map","el","interval","name","probability","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,UAAjC;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AACrCC,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AACA;;AAEDD,EAAAA,UAAU,GAAG;AACZG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWT,KAAvB;AACA,QAAIU,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACY,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACtCD,MAAAA,MAAM,CAACG,IAAP,CAAY,KAAKP,mBAAL,CAAyB,KAAKG,KAAL,CAAWT,KAAX,CAAiBW,CAAjB,CAAzB,CAAZ;AACA;AACD;;AAEDL,EAAAA,mBAAmB,CAACQ,IAAD,EAAO;AACzB,QAAIJ,MAAM,GAAG,EAAb;AACA,UAAMV,KAAK,GAAG,KAAKS,KAAL,CAAWT,KAAzB;AACA,UAAMe,aAAa,GAAGC,MAAM,CAACC,OAAP,CAAejB,KAAK,CAACc,IAAD,CAAL,CAAYf,SAA3B,EAAsCmB,GAAtC,CACpBC,EAAD,IAAQA,EAAE,CAAC,CAAD,CADW,CAAtB;;AAGA,SAAK,IAAIR,CAAC,GAAG,CAAR,EAAWS,QAAhB,EAA0BT,CAAC,GAAGI,aAAa,CAACH,MAA5C,EAAoDD,CAAC,EAArD,EAAyD;AACxDS,MAAAA,QAAQ,GAAGL,aAAa,CAACJ,CAAD,CAAxB;AACAD,MAAAA,MAAM,CAACG,IAAP,eACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKJ,KAAL,CAAWT,KAAX,CAAiBc,IAAjB,EAAuBO,IADzB,OACgC,KAAKZ,KAAL,CAAWV,SAAX,CAAqBqB,QAArB,EAA+BC,IAD/D,OAEE,KAAKZ,KAAL,CAAWV,SAAX,CAAqBqB,QAArB,EAA+BE,WAFjC,CADD;AAMA;;AACD,WAAOZ,MAAP;AACA;;AAEDa,EAAAA,MAAM,GAAG;AACR,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKnB,UAAL,EAA5B,CAAP;AACA;;AAnCoC;;AAsCtC,SAASoB,eAAT,CAAyB;AAAExB,EAAAA;AAAF,CAAzB,EAAoC;AACnC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACA;;AAED,eAAeF,OAAO,CAAC0B,eAAD,CAAP,CAAyBvB,OAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { intervals, notes } from \"./config\";\n\nclass Results extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.buildChart = this.buildChart.bind(this);\n\t\tthis.getIntervalsForNote = this.getIntervalsForNote.bind(this);\n\t}\n\n\tbuildChart() {\n\t\tconsole.log(this.props.notes);\n\t\tlet output = [];\n\t\tfor (let i = 0; i < notes.length; i++) {\n\t\t\toutput.push(this.getIntervalsForNote(this.props.notes[i]));\n\t\t}\n\t}\n\n\tgetIntervalsForNote(note) {\n\t\tlet output = [];\n\t\tconst notes = this.props.notes;\n\t\tconst intervalArray = Object.entries(notes[note].intervals).map(\n\t\t\t(el) => el[1]\n\t\t);\n\t\tfor (let i = 0, interval; i < intervalArray.length; i++) {\n\t\t\tinterval = intervalArray[i];\n\t\t\toutput.push(\n\t\t\t\t<div>\n\t\t\t\t\t{this.props.notes[note].name},{this.props.intervals[interval].name},\n\t\t\t\t\t{this.props.intervals[interval].probability}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t}\n\n\trender() {\n\t\treturn <div className=\"text-dark\">{this.buildChart()}</div>;\n\t}\n}\n\nfunction mapStateToProps({ notes }) {\n\treturn { notes };\n}\n\nexport default connect(mapStateToProps)(Results);\n"]},"metadata":{},"sourceType":"module"}