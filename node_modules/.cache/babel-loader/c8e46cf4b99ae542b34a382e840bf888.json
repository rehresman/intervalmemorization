{"ast":null,"code":"var _jsxFileName = \"/Users/ryanehresman/Documents/JS/create-react-app-next/musicstudy/src/results.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { intervals, notes } from \"./config\";\n\nclass Results extends React.Component {\n  constructor() {\n    super();\n    this.buildChart = this.buildChart.bind(this);\n    this.getIntervalsForNote = this.getIntervalsForNote.bind(this);\n    this.getNewRow = this.getNewRow.bind(this);\n    this.getXAxis = this.getXAxis.bind(this);\n    this.getIntervalNames = this.getIntervalNames.bind(this);\n  }\n\n  buildChart() {\n    console.log(this.props.notes);\n    let output = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      output.push(this.getNewRow(this.props.notes[i]));\n    }\n\n    output.push(this.getXAxis());\n    return output;\n  }\n\n  getIntervalsForNote(note) {\n    let output = [];\n    const notes = this.props.notes;\n    const intervalArray = Object.entries(notes[note.number].intervals).map(el => el[1]);\n    console.log();\n\n    for (let i = 0, interval; i < intervalArray.length; i++) {\n      interval = intervalArray[i];\n      output.push( /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: numberToColorHsl(interval.probability * 100)\n        },\n        className: \"h-100 w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 5\n        }\n      }, \" \"));\n    }\n\n    return output;\n  }\n\n  getIntervalNames() {\n    let output = [];\n\n    for (let i = 0; i < intervals.length; i++) {\n      output.push( /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }\n      }, intervals[i].name));\n    }\n\n    return output;\n  }\n\n  getNewRow(note) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, note.name, \":\"), \" \", this.getIntervalsForNote(note));\n  }\n\n  getXAxis() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, \"X:\"), \" \", this.getIntervalNames());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }\n    }, this.buildChart());\n  }\n\n}\n\nfunction mapStateToProps({\n  notes\n}) {\n  return {\n    notes\n  };\n}\n\nfunction hslToRgb(h, s, l) {\n  var r, g, b;\n\n  if (s == 0) {\n    r = g = b = l; // achromatic\n  } else {\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  return [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n} // convert a number to a color using hsl\n\n\nfunction numberToColorHsl(i) {\n  // as the function expects a value between 0 and 1, and red = 0° and green = 120°\n  // we convert the input to the appropriate hue value\n  var hue = i * 1.2 / 360; // we convert hsl to rgb (saturation 100%, lightness 50%)\n\n  var rgb = hslToRgb(hue, 1, 0.5); // we format to css value and return\n\n  return \"rgb(\" + rgb[0] + \",\" + rgb[1] + \",\" + rgb[2] + \")\";\n}\n\nexport default connect(mapStateToProps)(Results);","map":{"version":3,"sources":["/Users/ryanehresman/Documents/JS/create-react-app-next/musicstudy/src/results.js"],"names":["React","connect","intervals","notes","Results","Component","constructor","buildChart","bind","getIntervalsForNote","getNewRow","getXAxis","getIntervalNames","console","log","props","output","i","length","push","note","intervalArray","Object","entries","number","map","el","interval","backgroundColor","numberToColorHsl","probability","name","render","mapStateToProps","hslToRgb","h","s","l","r","g","b","hue2rgb","p","q","t","Math","floor","hue","rgb"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { intervals, notes } from \"./config\";\n\nclass Results extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.buildChart = this.buildChart.bind(this);\n\t\tthis.getIntervalsForNote = this.getIntervalsForNote.bind(this);\n\t\tthis.getNewRow = this.getNewRow.bind(this);\n\t\tthis.getXAxis = this.getXAxis.bind(this);\n\t\tthis.getIntervalNames = this.getIntervalNames.bind(this);\n\t}\n\n\tbuildChart() {\n\t\tconsole.log(this.props.notes);\n\t\tlet output = [];\n\t\tfor (let i = 0; i < notes.length; i++) {\n\t\t\toutput.push(this.getNewRow(this.props.notes[i]));\n\t\t}\n\t\toutput.push(this.getXAxis());\n\n\t\treturn output;\n\t}\n\n\tgetIntervalsForNote(note) {\n\t\tlet output = [];\n\t\tconst notes = this.props.notes;\n\t\tconst intervalArray = Object.entries(notes[note.number].intervals).map(\n\t\t\t(el) => el[1]\n\t\t);\n\t\tconsole.log();\n\t\tfor (let i = 0, interval; i < intervalArray.length; i++) {\n\t\t\tinterval = intervalArray[i];\n\n\t\t\toutput.push(\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: numberToColorHsl(interval.probability * 100),\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"h-100 w-100\"\n\t\t\t\t>\n\t\t\t\t\t{\" \"}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t}\n\n\tgetIntervalNames() {\n\t\tlet output = [];\n\t\tfor (let i = 0; i < intervals.length; i++) {\n\t\t\toutput.push(<b>{intervals[i].name}</b>);\n\t\t}\n\t\treturn output;\n\t}\n\n\tgetNewRow(note) {\n\t\treturn (\n\t\t\t<div className=\"d-flex justify-content-between\">\n\t\t\t\t<b>{note.name}:</b> {this.getIntervalsForNote(note)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetXAxis() {\n\t\treturn (\n\t\t\t<div className=\"d-flex justify-content-between\">\n\t\t\t\t<b className=\"hide\">X:</b> {this.getIntervalNames()}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn <div className=\"text-dark\">{this.buildChart()}</div>;\n\t}\n}\n\nfunction mapStateToProps({ notes }) {\n\treturn { notes };\n}\n\nfunction hslToRgb(h, s, l) {\n\tvar r, g, b;\n\n\tif (s == 0) {\n\t\tr = g = b = l; // achromatic\n\t} else {\n\t\tfunction hue2rgb(p, q, t) {\n\t\t\tif (t < 0) t += 1;\n\t\t\tif (t > 1) t -= 1;\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\t\tif (t < 1 / 2) return q;\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n\t\t\treturn p;\n\t\t}\n\n\t\tvar q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tvar p = 2 * l - q;\n\t\tr = hue2rgb(p, q, h + 1 / 3);\n\t\tg = hue2rgb(p, q, h);\n\t\tb = hue2rgb(p, q, h - 1 / 3);\n\t}\n\n\treturn [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n}\n\n// convert a number to a color using hsl\nfunction numberToColorHsl(i) {\n\t// as the function expects a value between 0 and 1, and red = 0° and green = 120°\n\t// we convert the input to the appropriate hue value\n\tvar hue = (i * 1.2) / 360;\n\t// we convert hsl to rgb (saturation 100%, lightness 50%)\n\tvar rgb = hslToRgb(hue, 1, 0.5);\n\t// we format to css value and return\n\treturn \"rgb(\" + rgb[0] + \",\" + rgb[1] + \",\" + rgb[2] + \")\";\n}\n\nexport default connect(mapStateToProps)(Results);\n"]},"metadata":{},"sourceType":"module"}